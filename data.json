[
  {
    "id": "ad6b1535-66f6-4696-9e57-d440bbb54397",
    "text": "fooey",
    "date": "2025-01-18T04:30:41.728Z"
  },
  {
    "id": "c42ddd4a-0e7a-4d83-9c57-531b32a9ad14",
    "text": "blah",
    "date": "2025-01-17T23:41:23.302Z"
  },
  {
    "id": "4bd5b977-2745-4c76-8b73-81afa73056fe",
    "text": "#Blender script to Set all selected objects to smooth\nimport bpy\n\ndef enable_auto_smooth_for_selected():\n    # Get all selected objects\n    selected_objs = bpy.context.selected_objects\n    \n    # Loop through selected objects\n    for obj in selected_objs:\n        # Ensure the object is a mesh\n        if obj.type == 'MESH':\n            # Enable auto smooth\n            obj.data.use_auto_smooth = True\n            # (Optional) You can set a custom angle here if needed\n            # obj.data.auto_smooth_angle = 1.22173  # ~70 degrees, for example\n\n# Run the function\nenable_auto_smooth_for_selected()",
    "date": "2025-01-17T06:48:29.671Z"
  },
  {
    "id": "0e74051f-b6f1-4665-a37d-1bdda18d5590",
    "text": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Text Saver</title>\n    <style>\n        body {\n            background-color: #121212;\n            background-image: url('words.jpg');\n            background-size: cover;\n            background-attachment: fixed;\n            color: #e0e0e0;\n            font-family: Arial, sans-serif;\n            margin: 0;\n            padding: 0;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n        }\n\n        .container {\n            background-color: rgba(30, 30, 30, 0.95);\n            border: 1px solid #333;\n            border-radius: 10px;\n            box-shadow: 0 4px 6px rgba(0, 255, 255, 0.2);\n            width: 90%;\n            max-width: 800px;\n            display: flex;\n            flex-direction: column;\n            gap: 20px;\n            padding: 20px;\n            max-height: 90vh;\n            overflow: hidden;\n        }\n\n        .input-section {\n            display: flex;\n            flex-direction: column;\n            gap: 10px;\n        }\n\n        textarea {\n            width: 100%;\n            height: 150px;\n            resize: none;\n            border-radius: 5px;\n            border: 1px solid #444;\n            padding: 10px;\n            font-size: 1rem;\n            background-color: #222;\n            color: #e0e0e0;\n        }\n\n        button {\n            padding: 10px;\n            font-size: 1rem;\n            border: none;\n            border-radius: 5px;\n            background-color: #00bcd4;\n            color: #fff;\n            cursor: pointer;\n        }\n\n        button:hover {\n            background-color: #008c9e;\n        }\n\n        .entries-section {\n            display: flex;\n            flex-direction: column;\n            gap: 10px;\n            overflow-y: auto;\n            max-height: calc(100% - 180px);\n        }\n\n        .entries-section h2 {\n            margin: 0 0 10px 0;\n        }\n\n        ul {\n            list-style: none;\n            padding: 0;\n        }\n\n        ul::-webkit-scrollbar {\n            width: 8px;\n        }\n\n        ul::-webkit-scrollbar-thumb {\n            background-color: #444;\n            border-radius: 4px;\n        }\n\n        ul::-webkit-scrollbar-thumb:hover {\n            background-color: #666;\n        }\n\n        li {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            background-color: #222;\n            border: 1px solid #444;\n            padding: 10px;\n            border-radius: 5px;\n            gap: 10px;\n        }\n\n        li span {\n            flex: 1;\n            text-align: left;\n        }\n\n        li .date {\n            color: #00bcd4;\n            margin-right: 10px;\n        }\n\n        .button-group {\n            display: flex;\n            gap: 10px;\n        }\n\n        li button {\n            background: none;\n            border: none;\n            font-size: 1.2rem;\n            cursor: pointer;\n            color: #00bcd4;\n        }\n\n        li button:hover {\n            color: #008c9e;\n        }\n\n        .modal {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.8);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        .modal-content {\n            background: #1e1e1e;\n            padding: 20px;\n            border-radius: 10px;\n            width: 80%;\n            max-width: 600px;\n            color: #e0e0e0;\n        }\n\n        .modal-content h3 {\n            margin-bottom: 20px;\n        }\n\n        .modal-content pre {\n            background-color: #222;\n            color: #e0e0e0;\n            border: 1px solid #444;\n            border-radius: 5px;\n            padding: 10px;\n            overflow: auto;\n            line-height: 1.5;\n        }\n\n        .modal-content .button-group {\n            display: flex;\n            justify-content: space-between;\n            margin-top: 20px;\n        }\n\n        .zebra-line:nth-child(odd) {\n            background-color: #333;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"input-section\">\n            <textarea id=\"textInput\" placeholder=\"Paste your text here...\"></textarea>\n            <button id=\"saveButton\">Save</button>\n        </div>\n        <div class=\"entries-section\">\n            <h2>Previously Pasted Texts</h2>\n            <ul id=\"entryList\"></ul>\n        </div>\n    </div>\n\n    <div id=\"modal\" class=\"modal\" style=\"display: none;\">\n        <div class=\"modal-content\">\n            <h3>Entry Details</h3>\n            <p class=\"date\" id=\"modalDate\"></p>\n            <pre id=\"modalText\"></pre>\n            <div class=\"button-group\">\n                <button id=\"deleteModal\">‚ùå Delete</button>\n                <button id=\"copyModal\">üìã Copy</button>\n                <button id=\"closeModal\">Close</button>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        document.addEventListener('DOMContentLoaded', () => {\n            const textInput = document.getElementById('textInput');\n            const saveButton = document.getElementById('saveButton');\n            const entryList = document.getElementById('entryList');\n            const modal = document.getElementById('modal');\n            const modalText = document.getElementById('modalText');\n            const modalDate = document.getElementById('modalDate');\n            const deleteModal = document.getElementById('deleteModal');\n            const copyModal = document.getElementById('copyModal');\n            const closeModal = document.getElementById('closeModal');\n\n            let currentEntryId = null;\n\n            function escapeHtml(text) {\n                return text.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n            }\n\n            async function loadEntries() {\n                const response = await fetch('/api/entries');\n                const entries = await response.json();\n                entryList.innerHTML = entries.map(entry => `\n                    <li>\n                        <span><span class=\"date\">${new Date(entry.date).toLocaleDateString()}</span> - ${escapeHtml(entry.text.slice(0, 20))}...</span>\n                        <div class=\"button-group\">\n                            <button onclick=\"copyText('${escapeHtml(entry.text)}')\">üìã</button>\n                            <button onclick=\"deleteEntry('${entry.id}')\">‚ùå</button>\n                            <button data-id=\"${entry.id}\" data-text=\"${escapeHtml(entry.text)}\" data-date=\"${entry.date}\" class=\"viewButton\">üîç</button>\n                        </div>\n                    </li>\n                `).join('');\n\n                document.querySelectorAll('.viewButton').forEach(button => {\n                    button.addEventListener('click', (event) => {\n                        const { id, text, date } = event.currentTarget.dataset;\n                        currentEntryId = id;\n                        const lines = text.split('\\n').map((line, index) => `<span class=\"zebra-line\">${index + 1}: ${line}</span>`).join('\\n');\n                        modalText.innerHTML = lines;\n                        modalDate.textContent = new Date(date).toLocaleString();\n                        modal.style.display = 'flex';\n                    });\n                });\n            }\n\n            function copyText(text) {\n                navigator.clipboard.writeText(text);\n                alert('Text copied to clipboard!');\n            }\n\n            async function deleteEntry(id) {\n                await fetch(`/api/entries/${id}`, { method: 'DELETE' });\n                loadEntries();\n            }\n\n            deleteModal.addEventListener('click', async () => {\n                if (currentEntryId) {\n                    await deleteEntry(currentEntryId);\n                    modal.style.display = 'none';\n                }\n            });\n\n            copyModal.addEventListener('click', () => {\n                const text = modalText.textContent.split(/\\n\\d+: /).slice(1).join('\\n');\n                navigator.clipboard.writeText(text);\n                alert('Text copied to clipboard!');\n            });\n\n            closeModal.addEventListener('click', () => {\n                modal.style.display = 'none';\n            });\n\n            textInput.addEventListener('keydown', (event) => {\n                if (event.key === 'Enter') {\n                    saveButton.click();\n                    event.preventDefault();\n                }\n            });\n\n            saveButton.addEventListener('click', async () => {\n                const text = textInput.value.trim();\n                if (!text) return;\n\n                await fetch('/api/entries', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ text }),\n                });\n\n                textInput.value = '';\n                loadEntries();\n            });\n\n            textInput.focus();\n            loadEntries();\n        });\n    </script>\n</body>\n</html>",
    "date": "2025-01-16T03:05:04.829Z"
  },
  {
    "id": "3aad8147-525e-4049-b499-7b80559ed73b",
    "text": "This is a really long test of the text blah blah foo too",
    "date": "2025-01-15T23:51:16.822Z"
  }
]